source('~/Desktop/baato-rclient/api_access.R', echo=TRUE)
library(R6)
library(httr)
baato_API <- R6Class(classname = "baato_API", #name of the class
public = list(
base_url = "https://api.baato.io/api/v1/",
key = NULL,
initialize = function(key = NA){
self$key = key
},
set_key = function(key){
self$key <- key
cat("The key is ", self$key)
},
display_key = function(){
cat(paste0("the key is", self$key, ".\n"))
},
#validate the response
validate_resp = function(req){
if (http_type(req) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (http_error(req)) {
stop(
sprintf(
"Baato API request failed [%s]\n%s\n>",
status_code(req),
useful_response$message
),
call. = FALSE
)
}
if (req$status_code != 200) {
pull <- jsonlite::fromJSON(content)
stop(pull$message, call. = FALSE)
}
},
#display the response
display_resp = function(req){
content <- httr::content(req, as = "text")
api_char <- base::rawToChar(req$content)
api_JSON <- jsonlite::fromJSON(api_char, flatten = TRUE)
api_JSON
},
rev_api_call = function(lat,lon){
reverse_url = "reverse"
fin_url = paste0(base_url,reverse_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
lat = lat,
lon = lon
))
self$validate_resp(req)
self$display_resp(req)
},
search_api_call = function(q,limit) {
search_url = "search"
fin_url = paste0(base_url,search_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
q = q,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
places_api_call = function(placeId){
place_url = "places"
fin_url = paste0(base_url,place_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
placeId = placeId
))
self$validate_resp(req)
self$display_resp(req)
},
nearby_api_call = function(type,lat,lon,limit){
nearby_url = "search/nearby"
fin_url = paste0(base_url,nearby_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
type = type,
lat = lat,
lon = lon,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
styles_api_call = function(style_name){
styles_url = "styles"
fin_url = paste0(base_url,styles_url)
req <- httr::GET(fin_url, query = list(
style_name = style_name,
key = self$key
))
self$validate_resp(req)
self$display_resp(req)
},
baato_directions_api = function(points,mode) {
directions_url = "directions"
fin_url = paste0(base_url,directions_url)
p1 = points[1]
p2 = points[2]
req <- httr::GET(fin_url, query = list(
key = self$key,
"points[]" = p1,
"points[]" = p2,
mode = mode
))
self$validate_resp(req)
self$display_resp(req)
}
)
)
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
library(R6)
library(httr)
baato_API <- R6Class(classname = "baato_API", #name of the class
public = list(
base_url = "https://api.baato.io/api/v1/",
key = NULL,
initialize = function(key = NA){
self$key = key
},
set_key = function(key){
self$key <- key
cat("The key is ", self$key)
},
display_key = function(){
cat(paste0("the key is", self$key, ".\n"))
},
#validate the response
validate_resp = function(req){
if (http_type(req) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (http_error(req)) {
stop(
sprintf(
"Baato API request failed [%s]\n%s\n>",
status_code(req),
useful_response$message
),
call. = FALSE
)
}
if (req$status_code != 200) {
pull <- jsonlite::fromJSON(content)
stop(pull$message, call. = FALSE)
}
},
#display the response
display_resp = function(req){
content <- httr::content(req, as = "text")
api_char <- base::rawToChar(req$content)
api_JSON <- jsonlite::fromJSON(api_char, flatten = TRUE)
api_JSON
},
rev_api_call = function(lat,lon){
reverse_url = "reverse"
fin_url = paste0(base_url,reverse_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
lat = lat,
lon = lon
))
self$validate_resp(req)
self$display_resp(req)
},
search_api_call = function(q,limit) {
search_url <- "search"
fin_url = paste0(base_url,search_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
q = q,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
places_api_call = function(placeId){
place_url <- "places"
fin_url = paste0(base_url,place_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
placeId = placeId
))
self$validate_resp(req)
self$display_resp(req)
},
nearby_api_call = function(type,lat,lon,limit){
nearby_url <- "search/nearby"
fin_url = paste0(base_url,nearby_url)
req <- httr::GET(fin_url, query = list(
key = self$key,
type = type,
lat = lat,
lon = lon,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
styles_api_call = function(style_name){
styles_url <- "styles"
fin_url = paste0(base_url,styles_url)
req <- httr::GET(fin_url, query = list(
style_name = style_name,
key = self$key
))
self$validate_resp(req)
self$display_resp(req)
},
baato_directions_api = function(points,mode) {
directions_url <- "directions"
fin_url = paste0(base_url,directions_url)
p1 = points[1]
p2 = points[2]
req <- httr::GET(fin_url, query = list(
key = self$key,
"points[]" = p1,
"points[]" = p2,
mode = mode
))
self$validate_resp(req)
self$display_resp(req)
}
)
)
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
point <- c("27.71772,85.32784","27.73449,85.33714")
baato$baato_directions_api(points = point, mode="car")
library(R6)
library(httr)
baato_API <- R6Class(classname = "baato_API", #name of the class
public = list(
key = NULL,
initialize = function(key = NA){
self$key = key
},
set_key = function(key){
self$key <- key
cat("The key is ", self$key)
},
display_key = function(){
cat(paste0("the key is", self$key, ".\n"))
},
#validate the response
validate_resp = function(req){
if (http_type(req) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (http_error(req)) {
stop(
sprintf(
"Baato API request failed [%s]\n%s\n>",
status_code(req),
useful_response$message
),
call. = FALSE
)
}
if (req$status_code != 200) {
pull <- jsonlite::fromJSON(content)
stop(pull$message, call. = FALSE)
}
},
#display the response
display_resp = function(req){
content <- httr::content(req, as = "text")
api_char <- base::rawToChar(req$content)
api_JSON <- jsonlite::fromJSON(api_char, flatten = TRUE)
api_JSON
},
rev_api_call = function(lat,lon){
reverse_url = "https://api.baato.io/api/v1/reverse"
req <- httr::GET(reverse_url, query = list(
key = self$key,
lat = lat,
lon = lon
))
self$validate_resp(req)
self$display_resp(req)
},
search_api_call = function(q,limit) {
search_url <- "https://api.baato.io/api/v1/search"
req <- httr::GET(search_url, query = list(
key = self$key,
q = q,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
places_api_call = function(placeId){
place_url <- "https://api.baato.io/api/v1/places"
req <- httr::GET(place_url, query = list(
key = self$key,
placeId = placeId
))
self$validate_resp(req)
self$display_resp(req)
},
nearby_api_call = function(type,lat,lon,limit){
nearby_url <- "https://api.baato.io/api/v1/search/nearby"
req <- httr::GET(nearby_url, query = list(
key = self$key,
type = type,
lat = lat,
lon = lon,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
styles_api_call = function(style_name){
styles_url <- "https://api.baato.io/api/v1/styles"
fin_url = paste0(base_url,styles_url)
req <- httr::GET(fin_url, query = list(
style_name = style_name,
key = self$key
))
self$validate_resp(req)
self$display_resp(req)
},
baato_directions_api = function(points,mode) {
directions_url <- "https://api.baato.io/api/v1/directions"
fin_url = paste0(base_url,directions_url)
p1 = points[1]
p2 = points[2]
req <- httr::GET(fin_url, query = list(
key = self$key,
"points[]" = p1,
"points[]" = p2,
mode = mode
))
self$validate_resp(req)
self$display_resp(req)
}
)
)
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
point <- c("27.71772,85.32784","27.73449,85.33714")
baato$baato_directions_api(points = point, mode="car")
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
point <- c("27.71772,85.32784","27.73449,85.33714")
baato$baato_directions_api(points = point, mode="car")
library(R6)
library(httr)
baato_API <- R6Class(classname = "baato_API", #name of the class
public = list(
key = NULL,
initialize = function(key = NA){
self$key = key
},
set_key = function(key){
self$key <- key
cat("The key is ", self$key)
},
display_key = function(){
cat(paste0("the key is", self$key, ".\n"))
},
#validate the response
validate_resp = function(req){
if (http_type(req) != "application/json") {
stop("API did not return json", call. = FALSE)
}
if (http_error(req)) {
stop(
sprintf(
"Baato API request failed [%s]\n%s\n>",
status_code(req),
useful_response$message
),
call. = FALSE
)
}
if (req$status_code != 200) {
pull <- jsonlite::fromJSON(content)
stop(pull$message, call. = FALSE)
}
},
#display the response
display_resp = function(req){
content <- httr::content(req, as = "text")
api_char <- base::rawToChar(req$content)
api_JSON <- jsonlite::fromJSON(api_char, flatten = TRUE)
api_JSON
},
rev_api_call = function(lat,lon){
reverse_url = "https://api.baato.io/api/v1/reverse"
req <- httr::GET(reverse_url, query = list(
key = self$key,
lat = lat,
lon = lon
))
self$validate_resp(req)
self$display_resp(req)
},
search_api_call = function(q,limit) {
search_url <- "https://api.baato.io/api/v1/search"
req <- httr::GET(search_url, query = list(
key = self$key,
q = q,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
places_api_call = function(placeId){
place_url <- "https://api.baato.io/api/v1/places"
req <- httr::GET(place_url, query = list(
key = self$key,
placeId = placeId
))
self$validate_resp(req)
self$display_resp(req)
},
nearby_api_call = function(type,lat,lon,limit){
nearby_url <- "https://api.baato.io/api/v1/search/nearby"
req <- httr::GET(nearby_url, query = list(
key = self$key,
type = type,
lat = lat,
lon = lon,
limit = limit
))
self$validate_resp(req)
self$display_resp(req)
},
styles_api_call = function(style_name){
styles_url <- "https://api.baato.io/api/v1/styles"
req <- httr::GET(styles_url, query = list(
style_name = style_name,
key = self$key
))
self$validate_resp(req)
self$display_resp(req)
},
baato_directions_api = function(points,mode) {
directions_url <- "https://api.baato.io/api/v1/directions"
p1 = points[1]
p2 = points[2]
req <- httr::GET(directions_url, query = list(
key = self$key,
"points[]" = p1,
"points[]" = p2,
mode = mode
))
self$validate_resp(req)
self$display_resp(req)
}
)
)
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
point <- c("27.71772,85.32784","27.73449,85.33714")
baato$baato_directions_api(points = point, mode="car")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
baato$nearby_api_call(type="school",lat=27.71765,lon=85.32691,limit=20)
baato$places_api_call(placeId = 102235)
baato$search_api_call(q="shemrock nepalgunj",limit=4)
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
source('~/Desktop/baato-rclient/api_access.R', echo=TRUE)
getwd()
install.packages("devtools")
install.packages("roxygen2")
check()
check()
library('devtools')
library(roxygen2)
check()
check()
check()
check()
install("baatoRClient")
cd ..
setwd("../")
install("baato-rclient")
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
install("baato-rclient")
library(devtools)
install_github("https://github.com/Jasna-Budhathoki/baatoRClient");
install_github("https://github.com/Jasna-Budhathoki/baatoRClient")
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
install_github("https://github.com/Jasna-Budhathoki/baatoRClient",dependencies = TRUE)
force = TRUE
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
library(R6)
library(httr)
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
install_github("https://github.com/Jasna-Budhathoki/baatoRClient")
library(httr)
library(R6)
baato <- baato_API$new(key = "bpk.05j39KLSi-P80QvtSUdrMYpwuIqsgjTYlMuWtcvZ9UDZ")
baato$rev_api_call(lat = 27.70446921370009, lon = 85.32051086425783)
point <- c("27.71772,85.32784","27.73449,85.33714")
baato$baato_directions_api(points = point, mode="car")
baato$nearby_api_call(type="school",lat=27.71765,lon=85.32691,limit=20)
baato$places_api_call(placeId = 102235)
baato$search_api_call(q="shemrock nepalgunj",limit=4)
baato$styles_api_call(style_name="monochrome")
